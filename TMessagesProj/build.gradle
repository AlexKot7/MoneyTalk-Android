apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'de.felixschulze.gradle.hockeyapp'

repositories {
    mavenCentral()
    maven {
        url = "http://repo1.maven.org/maven2/"
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.google.android.gms:play-services-gcm:8.3.0'
    compile 'com.google.android.gms:play-services-maps:8.3.0'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile 'net.hockeyapp.android:HockeySDK:3.6.+'
    compile 'com.googlecode.mp4parser:isoparser:1.0.+'
    compile 'com.googlecode.json-simple:json-simple:1.1'
    compile 'io.card:android-sdk:5.2.0'

    compile fileTree(dir: 'jars', include: '*.jar')
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    useLibrary 'org.apache.http.legacy'
    defaultConfig.applicationId = "ru.tinkoff.telegram.mt"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile file("config/debug.keystore")
        }

        release {
            storeFile file("config/debug.keystore")
        }
    }

    buildTypes {

        List<String> fileContents = new File('TMessagesProj/hockey').readLines()

        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".test"
            buildConfigField "String", "HOCKEYAPP_ID", fileContents[0]
        }

        mt_release {
            lintOptions {
                disable 'MissingTranslation'
            }
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HOCKEYAPP_ID", fileContents[1]
        }


//        release {
//            debuggable false
//            jniDebuggable false
//            signingConfig signingConfigs.release
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//
//        foss {
//            debuggable false
//            jniDebuggable false
//            signingConfig signingConfigs.release
//        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest.xml'
    }

//    sourceSets.release {
//        manifest.srcFile 'config/release/AndroidManifest.xml'
//    }
//
//    sourceSets.foss {
//        manifest.srcFile 'config/foss/AndroidManifest.xml'
//    }

    sourceSets.mt_release {
        manifest.srcFile 'config/mt_release/AndroidManifest.xml'
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 719
        versionName "1.0.0"
        ndk {
            abiFilters "armeabi-v7a", "armeabi", "x86"
        }
    }
}

task prepareDebugGAconfig(type: Copy) {
    description = 'Switches to DEBUG version of google-services.json'
    from "src/debug"
    include 'google-services.json'
    into '.'
}

task prepareReleaseGAconfig(type: Copy) {
    description = 'Switches to RELEASE version of google-services.json'
    from "src/main"
    include 'google-services.json'
    into '.'
}

afterEvaluate {
    processDebugGoogleServices.dependsOn prepareDebugGAconfig
    processReleaseGoogleServices.dependsOn prepareReleaseGAconfig
    processMt_releaseGoogleServices.dependsOn prepareReleaseGAconfig
}

hockeyapp {
    notify = 1 // 0 not notify testers, 1 notify all testers that can install this app
    status = 2 // 1 not allow users to download the version, 2 make the version available for download
    notesType = 0 // 0 Textile, 1 Markdown
    outputDirectory = 'build/outputs/apk/'
}

gradle.projectsEvaluated {

    List<String> fileContents = new File('TMessagesProj/hockey').readLines()

    uploadDebugToHockeyApp.doFirst {
        println 'Configuring HockeyApp plugin for upload qa2 build...'
        hockeyapp {
            apiToken = fileContents[2]
            releaseType = 2 // 0 beta, 1 live, 2 alpha
            appFileNameRegex = 'App-debug-(?!unaligned).*.apk'
        }
    }

    uploadMt_releaseToHockeyApp.doFirst {
        println 'Configuring HockeyApp plugin for upload release build...'
        hockeyapp {
            apiToken = fileContents[3]
            releaseType = 2 // 0 beta, 1 live, 2 alpha
            appFileNameRegex = 'App-release-(?!unaligned).*.apk'
            symbolsDirectory = file('build/outputs/mapping/release/')
            mappingFileNameRegex = 'mapping.txt'
        }
    }
}
